<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="serialCloseError" xml:space="preserve">
    <value>Une connexion série est nécessaire. \r\nFermez la fenêtre principale à la place.</value>
  </data>
  <data name="mainAttention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="mainLimits1" xml:space="preserve">
    <value>Le prochain mouvement dépassera les limites de la machine!\r</value>
  </data>
  <data name="mainLimits2" xml:space="preserve">
    <value>\r\n Appuyez sur 'Ok' pour continuer quand même</value>
  </data>
  <data name="mainParseError" xml:space="preserve">
    <value>Pas un numéro valide</value>
  </data>
  <data name="mainProblem" xml:space="preserve">
    <value>Problème</value>
  </data>
  <data name="mainQuit" xml:space="preserve">
    <value>Quittez GRBL-Plotter?</value>
  </data>
  <data name="mainToolChange" xml:space="preserve">
    <value>Changement d'outil / stylo!</value>
  </data>
  <data name="mainToolChange1" xml:space="preserve">
    <value>Changement d'outil nécessaire: \r</value>
  </data>
  <data name="mainToolChange2" xml:space="preserve">
    <value>\r appuyez sur start pour continuer.</value>
  </data>
  <data name="mainInfoCheckCode" xml:space="preserve">
    <value>Vérifier le code G</value>
  </data>
  <data name="mainInfoSendCode" xml:space="preserve">
    <value>Envoyer le code G</value>
  </data>
  <data name="mainInfoStopStream" xml:space="preserve">
    <value>ARRÊTER le streaming (</value>
  </data>
  <data name="mainInfoStopStream2" xml:space="preserve">
    <value>ARRÊTER le streaming (Line</value>
  </data>
  <data name="mainInfoToolChange" xml:space="preserve">
    <value>Changement d'outil ...</value>
  </data>
  <data name="mainInfoUndo" xml:space="preserve">
    <value>Annuler la dernière action</value>
  </data>
  <data name="mainHotkeyError" xml:space="preserve">
    <value>Fichier 'hotkeys.xml' non trouvé, aucun raccourci clavier défini!</value>
  </data>
  <data name="mainHotkeyError1" xml:space="preserve">
    <value>Action inconnue:</value>
  </data>
  <data name="mainHotkeyError2" xml:space="preserve">
    <value>Erreur avec Hotkey.xml</value>
  </data>
  <data name="mainLimits3" xml:space="preserve">
    <value>La dimension graphique dépasse la dimension de la machine! \r\nLa transformation est recommandée pour éviter d’endommager la machine!</value>
  </data>
  <data name="mainLoadError" xml:space="preserve">
    <value>Le streaming doit être arrêté avant de charger le nouveau fichier</value>
  </data>
  <data name="mainLoadError1" xml:space="preserve">
    <value>Fichier non trouvé: '</value>
  </data>
  <data name="mainLoadError2" xml:space="preserve">
    <value>L’extension d’URL n’est pas 'svg' ou 'dxf' \r\nEssayez quand même d’importer du SVG, mais sans définir la liste 'Fichier récent'.</value>
  </data>
  <data name="mainParseError1" xml:space="preserve">
    <value>Numéro non valide, définissez la ligne sur 0</value>
  </data>
  <data name="mainPauseStream" xml:space="preserve">
    <value>Pause streaming - appuyez sur play</value>
  </data>
  <data name="mainPauseStream1" xml:space="preserve">
    <value>Le dernier travail a été mis en pause à la ligne</value>
  </data>
  <data name="mainPauseStream2" xml:space="preserve">
    <value>\n\nVoulez-vous continuer le travail?</value>
  </data>
  <data name="mainStreamingActive" xml:space="preserve">
    <value>Le streaming est toujours actif - appuyez sur Arrêter et réessayez.</value>
  </data>
  <data name="mainUnknownCode" xml:space="preserve">
    <value>G-Code inconnu commenté: \r\n</value>
  </data>
  <data name="mainInfoErrorLine" xml:space="preserve">
    <value>Erreur avant la ligne</value>
  </data>
  <data name="mainInfoFinishCheck" xml:space="preserve">
    <value>Terminer la vérification du code G</value>
  </data>
  <data name="mainInfoFinishSend" xml:space="preserve">
    <value>Terminer l'envoi du code G</value>
  </data>
  <data name="mainInfoKill" xml:space="preserve">
    <value>Appuyez sur 'Kill Alarm' pour continuer</value>
  </data>
  <data name="mainInfoLaserModeOff" xml:space="preserve">
    <value>Mode laser non actif $32 = 0</value>
  </data>
  <data name="mainInfoLaserModeOn" xml:space="preserve">
    <value>Mode laser actif $32 = 1</value>
  </data>
  <data name="mainInfoPause" xml:space="preserve">
    <value>Pause streaming - appuyez sur play (</value>
  </data>
  <data name="mainInfoProbing" xml:space="preserve">
    <value>Sondage</value>
  </data>
  <data name="mainInfoResume" xml:space="preserve">
    <value>Appuyez sur 'Reprendre' pour continuer</value>
  </data>
  <data name="mainInfoWaitIdle" xml:space="preserve">
    <value>Attendez IDLE, puis faites une pause (</value>
  </data>
  <data name="mainProgress" xml:space="preserve">
    <value>Le progrès</value>
  </data>
  <data name="probingCancel1" xml:space="preserve">
    <value>Échantillonnage annulé</value>
  </data>
  <data name="probingCancel2" xml:space="preserve">
    <value>Traiter la dernière commande</value>
  </data>
  <data name="probingProbingOn" xml:space="preserve">
    <value>Enquête sur </value>
  </data>
  <data name="probingCenter" xml:space="preserve">
    <value>Déplacer au centre</value>
  </data>
  <data name="probingFail1" xml:space="preserve">
    <value>Echec: pas de contact</value>
  </data>
  <data name="probingFail2" xml:space="preserve">
    <value>Annuler le sondage</value>
  </data>
  <data name="probingFinish" xml:space="preserve">
    <value>Terminer</value>
  </data>
  <data name="probingSetCenter" xml:space="preserve">
    <value>Définir le centre</value>
  </data>
  <data name="probingTimeOut" xml:space="preserve">
    <value>Temps libre</value>
  </data>
  <data name="serialClose" xml:space="preserve">
    <value>Proche</value>
  </data>
  <data name="mainLoadError3" xml:space="preserve">
    <value>Extension de fichier non prise en charge "</value>
  </data>
  <data name="serialOpen" xml:space="preserve">
    <value>Ouvrir</value>
  </data>
  <data name="mainSimuStart" xml:space="preserve">
    <value>Lancer la simulation de trajectoire</value>
  </data>
  <data name="mainSimuStop" xml:space="preserve">
    <value>Arrêter la simulation</value>
  </data>
  <data name="mainHelpLanguage" xml:space="preserve">
    <value>N'hésitez pas à améliorer la traduction</value>
  </data>
  <data name="mainSimuSpeed" xml:space="preserve">
    <value>La vitesse</value>
  </data>
  <data name="grblAlarm" xml:space="preserve">
    <value>Alarme</value>
  </data>
  <data name="grblCheck" xml:space="preserve">
    <value>Vérifier</value>
  </data>
  <data name="grblDoor" xml:space="preserve">
    <value>Porte</value>
  </data>
  <data name="grblHold" xml:space="preserve">
    <value>Tenir</value>
  </data>
  <data name="grblHome" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="grblProbe" xml:space="preserve">
    <value>Sonde</value>
  </data>
  <data name="grblRun" xml:space="preserve">
    <value>Courir</value>
  </data>
  <data name="grblSleep" xml:space="preserve">
    <value>Sommeil</value>
  </data>
  <data name="statusStripeCheckCOM" xml:space="preserve">
    <value>Consultez la fenêtre COM pour plus d'informations</value>
  </data>
  <data name="statusStripeClickKeys" xml:space="preserve">
    <value>Contrôle-cliquez pour sélectionner la figure; Alt-Cliquez pour sélectionner Groupe; Ou cliquez sur XML-Tag</value>
  </data>
  <data name="statusStripeClickKeys2" xml:space="preserve">
    <value>Cliquez: marquez la figure; Ctrl-clic: marquer le groupe; Alt-Click: afficher la ligne GCode</value>
  </data>
  <data name="statusStripeDownKeys" xml:space="preserve">
    <value>Contrôle-Bas pour déplacer le bloc sélectionné d'un vers le bas; Control-Shift-Down pour aller jusqu'à la fin</value>
  </data>
  <data name="statusStripeEditModeOn" xml:space="preserve">
    <value>Mode édition activé - cliquez dans la vue 2D pour terminer</value>
  </data>
  <data name="statusStripeFileLoad" xml:space="preserve">
    <value>Chargement de fichiers</value>
  </data>
  <data name="statusStripeFileNotFound" xml:space="preserve">
    <value>Fichier introuvable - supprimer de la liste</value>
  </data>
  <data name="statusStripeGrblResetNeeded" xml:space="preserve">
    <value>Le port série est peut-être verrouillé et un redémarrage de GRBL-Plotter est nécessaire</value>
  </data>
  <data name="statusStripeResetNeeded" xml:space="preserve">
    <value>Une réinitialisation du contrôleur est probablement nécessaire</value>
  </data>
  <data name="statusStripeStreamingStatusSaved" xml:space="preserve">
    <value>Le statut de streaming et le G-Code sont enregistrés dans '_lastProcessed.nc'. La poursuite après le redémarrage du programme est possible.</value>
  </data>
  <data name="statusStripeUpKeys" xml:space="preserve">
    <value>Contrôle vers le haut pour déplacer le bloc sélectionné vers le haut; Control-Shift-Up pour aller en haut</value>
  </data>
  <data name="statusStripeSelectionMoved" xml:space="preserve">
    <value>Sélection déplacée par</value>
  </data>
  <data name="statusStripeCheckUpdate" xml:space="preserve">
    <value>'Vérifier la nouvelle version de GRBL-Plotter sur GitHub' - peut être désactivé dans [Configuration - Contrôle de programme]</value>
  </data>
</root>