<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="mainAttention" xml:space="preserve">
    <value>Atenção</value>
  </data>
  <data name="mainHotkeyError" xml:space="preserve">
    <value>Arquivo 'hotkeys.xml' não encontrado, nenhuma tecla de atalho definida!</value>
  </data>
  <data name="mainHotkeyError1" xml:space="preserve">
    <value>Ação desconhecida:</value>
  </data>
  <data name="mainHotkeyError2" xml:space="preserve">
    <value>Erro com o Hotkey.xml</value>
  </data>
  <data name="mainInfoCheckCode" xml:space="preserve">
    <value>Verificar código G</value>
  </data>
  <data name="mainInfoErrorLine" xml:space="preserve">
    <value>Erro antes da linha</value>
  </data>
  <data name="mainInfoFinishCheck" xml:space="preserve">
    <value>Concluir a verificação do código G</value>
  </data>
  <data name="mainInfoFinishSend" xml:space="preserve">
    <value>Concluir o envio do código G</value>
  </data>
  <data name="mainInfoKill" xml:space="preserve">
    <value>Pressione 'Kill Alarm' para prosseguir</value>
  </data>
  <data name="mainInfoLaserModeOff" xml:space="preserve">
    <value>Modo Laser não ativo $ 32 = 0</value>
  </data>
  <data name="mainInfoLaserModeOn" xml:space="preserve">
    <value>Modo a laser ativo $ 32 = 1</value>
  </data>
  <data name="mainInfoPause" xml:space="preserve">
    <value>Pausar streaming - pressione reproduzir (</value>
  </data>
  <data name="mainInfoProbing" xml:space="preserve">
    <value>Sondagem</value>
  </data>
  <data name="mainInfoResume" xml:space="preserve">
    <value>Pressione 'Continuar' para continuar</value>
  </data>
  <data name="mainInfoSendCode" xml:space="preserve">
    <value>Enviar código G</value>
  </data>
  <data name="mainInfoStopStream" xml:space="preserve">
    <value>PARAR a transmissão (</value>
  </data>
  <data name="mainInfoStopStream2" xml:space="preserve">
    <value>PARAR a transmissão (Linha</value>
  </data>
  <data name="mainInfoToolChange" xml:space="preserve">
    <value>Troca de ferramenta ...</value>
  </data>
  <data name="mainInfoUndo" xml:space="preserve">
    <value>Desfazer a última ação</value>
  </data>
  <data name="mainInfoWaitIdle" xml:space="preserve">
    <value>Aguarde IDLE e faça uma pausa (</value>
  </data>
  <data name="mainLimits1" xml:space="preserve">
    <value>O próximo passo excederá os limites da máquina!</value>
  </data>
  <data name="mainLimits2" xml:space="preserve">
    <value>\r\n Pressione 'Ok' para mover de qualquer maneira</value>
  </data>
  <data name="mainLimits3" xml:space="preserve">
    <value>A dimensão gráfica excede a dimensão da máquina! \r\nA transformação é recomendada para evitar danos à máquina!</value>
  </data>
  <data name="mainLoadError" xml:space="preserve">
    <value>O fluxo deve ser interrompido antes de carregar o novo arquivo</value>
  </data>
  <data name="mainLoadError1" xml:space="preserve">
    <value>Arquivo não encontrado: '</value>
  </data>
  <data name="mainLoadError2" xml:space="preserve">
    <value>A extensão do URL não é 'svg' ou 'dxf' \r\nTente importar o SVG de qualquer maneira, mas sem definir a lista 'Arquivo recente'.</value>
  </data>
  <data name="mainLoadError3" xml:space="preserve">
    <value>Extensão de arquivo não suportada '</value>
  </data>
  <data name="mainParseError" xml:space="preserve">
    <value>Não é um número válido</value>
  </data>
  <data name="mainParseError1" xml:space="preserve">
    <value>Não é um número válido, defina a linha como 0</value>
  </data>
  <data name="mainPauseStream" xml:space="preserve">
    <value>Pausar streaming - pressione reproduzir</value>
  </data>
  <data name="mainPauseStream1" xml:space="preserve">
    <value>O último trabalho foi interrompido na linha</value>
  </data>
  <data name="mainPauseStream2" xml:space="preserve">
    <value>, \ r \ n Deseja continuar o trabalho?</value>
  </data>
  <data name="mainProblem" xml:space="preserve">
    <value>Problema</value>
  </data>
  <data name="mainProgress" xml:space="preserve">
    <value>Progresso</value>
  </data>
  <data name="mainQuit" xml:space="preserve">
    <value>Sair do GRBL-Plotter?</value>
  </data>
  <data name="mainStreamingActive" xml:space="preserve">
    <value>A transmissão ainda está ativa - pressione Parar e tente novamente</value>
  </data>
  <data name="mainToolChange" xml:space="preserve">
    <value>Troca de ferramenta / caneta!</value>
  </data>
  <data name="mainToolChange1" xml:space="preserve">
    <value>Mudança de ferramenta necessária:</value>
  </data>
  <data name="mainToolChange2" xml:space="preserve">
    <value>pressione iniciar para continuar.</value>
  </data>
  <data name="mainUnknownCode" xml:space="preserve">
    <value>Corrigido um código G desconhecido: \r\n</value>
  </data>
  <data name="probingCancel1" xml:space="preserve">
    <value>Sondagem cancelada</value>
  </data>
  <data name="probingCancel2" xml:space="preserve">
    <value>Processar o último comando</value>
  </data>
  <data name="probingCenter" xml:space="preserve">
    <value>Mover para o centro</value>
  </data>
  <data name="probingFail1" xml:space="preserve">
    <value>Falhar: sem contato</value>
  </data>
  <data name="probingFail2" xml:space="preserve">
    <value>Cancelar sondagem</value>
  </data>
  <data name="probingFinish" xml:space="preserve">
    <value>Terminar</value>
  </data>
  <data name="probingProbingOn" xml:space="preserve">
    <value>Sondagem ativada</value>
  </data>
  <data name="probingSetCenter" xml:space="preserve">
    <value>Definir centro</value>
  </data>
  <data name="probingTimeOut" xml:space="preserve">
    <value>Tempo esgotado</value>
  </data>
  <data name="serialClose" xml:space="preserve">
    <value>Fechar</value>
  </data>
  <data name="serialCloseError" xml:space="preserve">
    <value>É necessário conexão serial. \ R \ nFeche a janela principal</value>
  </data>
  <data name="serialOpen" xml:space="preserve">
    <value>Abrir</value>
  </data>
  <data name="mainSimuStart" xml:space="preserve">
    <value>Iniciar simulação de caminho</value>
  </data>
  <data name="mainSimuStop" xml:space="preserve">
    <value>Parar simulação</value>
  </data>
  <data name="mainHelpLanguage" xml:space="preserve">
    <value>Sinta-se livre para melhorar a tradução</value>
  </data>
  <data name="mainSimuSpeed" xml:space="preserve">
    <value>Rapidez</value>
  </data>
  <data name="grblIdle" xml:space="preserve">
    <value>Ocioso</value>
  </data>
  <data name="grblRun" xml:space="preserve">
    <value>Ecexutando</value>
  </data>
  <data name="grblAlarm" xml:space="preserve">
    <value>Alarme</value>
  </data>
  <data name="grblCheck" xml:space="preserve">
    <value>Verifica</value>
  </data>
  <data name="grblDoor" xml:space="preserve">
    <value>Porta</value>
  </data>
  <data name="grblHold" xml:space="preserve">
    <value>Aguarde</value>
  </data>
  <data name="grblHome" xml:space="preserve">
    <value>Casa</value>
  </data>
  <data name="grblJog" xml:space="preserve">
    <value>Jog</value>
  </data>
  <data name="grblProbe" xml:space="preserve">
    <value>Sonda</value>
  </data>
  <data name="grblSleep" xml:space="preserve">
    <value>Dormir</value>
  </data>
  <data name="statusStripeCheckCOM" xml:space="preserve">
    <value>Verifique a janela COM para obter mais informações</value>
  </data>
  <data name="statusStripeClickKeys" xml:space="preserve">
    <value>Ctrl-Clique para selecionar Figura; Clique com a tecla Alt pressionada para selecionar Grupo; Ou clique em XML-Tag</value>
  </data>
  <data name="statusStripeClickKeys2" xml:space="preserve">
    <value>Clique: marque Figura; Control-Click: marque Grupo; Alt-Click: mostra a linha do GCode</value>
  </data>
  <data name="statusStripeDownKeys" xml:space="preserve">
    <value>Control-Down para mover o bloco selecionado um para baixo; Control-Shift-Down para mover para o final</value>
  </data>
  <data name="statusStripeEditModeOn" xml:space="preserve">
    <value>Modo de edição ativado - clique na visualização 2D para finalizar</value>
  </data>
  <data name="statusStripeFileLoad" xml:space="preserve">
    <value>Carregamento de arquivo</value>
  </data>
  <data name="statusStripeFileNotFound" xml:space="preserve">
    <value>Arquivo não encontrado - remover da lista</value>
  </data>
  <data name="statusStripeGrblResetNeeded" xml:space="preserve">
    <value>Talvez a porta serial esteja bloqueada e seja necessário reiniciar o GRBL-Plotter</value>
  </data>
  <data name="statusStripeResetNeeded" xml:space="preserve">
    <value>Provavelmente é necessário reiniciar o controlador</value>
  </data>
  <data name="statusStripeStreamingStatusSaved" xml:space="preserve">
    <value>O status da transmissão e o código G são salvos em '_lastProcessed.nc'. É possível continuar após a reinicialização do programa.</value>
  </data>
  <data name="statusStripeUpKeys" xml:space="preserve">
    <value>Control-Up para mover o bloco selecionado para cima; Control-Shift-Up para mover para o topo</value>
  </data>
  <data name="statusStripeSelectionMoved" xml:space="preserve">
    <value>Seleção movida por</value>
  </data>
  <data name="statusStripeCheckUpdate" xml:space="preserve">
    <value>'Verificar se há nova versão do GRBL-Plotter no GitHub' - pode ser desativado em [Setup - Program control]</value>
  </data>
</root>