<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="serialCloseError" xml:space="preserve">
    <value>Eine serielle Verbindung ist erforderlich. \r\nSchließen Sie stattdessen das Hauptfenster</value>
  </data>
  <data name="mainAttention" xml:space="preserve">
    <value>Achtung</value>
  </data>
  <data name="mainLimits1" xml:space="preserve">
    <value>Die nächste Bewegung wird die Maschinengrenzen überschreiten! \r</value>
  </data>
  <data name="mainLimits2" xml:space="preserve">
    <value>\r\n Drücke 'Ok', um trotzdem zu fahren</value>
  </data>
  <data name="mainParseError" xml:space="preserve">
    <value>Keine gültige Zahl</value>
  </data>
  <data name="mainQuit" xml:space="preserve">
    <value>GRBL-Plotter beenden?</value>
  </data>
  <data name="mainToolChange" xml:space="preserve">
    <value>Werkzeug- / Stiftwechsel!</value>
  </data>
  <data name="mainToolChange1" xml:space="preserve">
    <value>Werkzeugwechsel erforderlich: \r</value>
  </data>
  <data name="mainToolChange2" xml:space="preserve">
    <value>\r Drücke Start, um fortzufahren.</value>
  </data>
  <data name="mainInfoCheckCode" xml:space="preserve">
    <value>Überprüfe G-Code</value>
  </data>
  <data name="mainInfoSendCode" xml:space="preserve">
    <value>Sende G-Code</value>
  </data>
  <data name="mainInfoToolChange" xml:space="preserve">
    <value>Werkzeug wechseln...</value>
  </data>
  <data name="mainInfoUndo" xml:space="preserve">
    <value>Letzte Aktion rückgängig machen</value>
  </data>
  <data name="mainHotkeyError" xml:space="preserve">
    <value>Datei 'hotkeys.xml' nicht gefunden, keine Hotkeys gesetzt!</value>
  </data>
  <data name="mainHotkeyError1" xml:space="preserve">
    <value>Unbekannte Aktion:</value>
  </data>
  <data name="mainHotkeyError2" xml:space="preserve">
    <value>Fehler mit Hotkey.xml</value>
  </data>
  <data name="mainLimits3" xml:space="preserve">
    <value>Grafikgröße überschreitet Maschinengröße! \r\nTransformation wird empfohlen, um eine Beschädigung der Maschine zu vermeiden!</value>
  </data>
  <data name="mainLoadError" xml:space="preserve">
    <value>Das Streaming muss vor dem Laden einer neuen Datei gestoppt werden</value>
  </data>
  <data name="mainLoadError1" xml:space="preserve">
    <value>Datei nicht gefunden: '</value>
  </data>
  <data name="mainLoadError2" xml:space="preserve">
    <value>Die URL-Erweiterung lautet nicht "svg" oder "dxf". \r\nVersuche trotzdem den SVG-Import, ohne jedoch die Liste "Zuletzt verwendete Dateien" zu aktualisieren.</value>
  </data>
  <data name="mainParseError1" xml:space="preserve">
    <value>Keine gültige Zahl, Zeile auf 0 setzen</value>
  </data>
  <data name="mainPauseStream" xml:space="preserve">
    <value>Streaming unterbrochen - Play drücken</value>
  </data>
  <data name="mainPauseStream1" xml:space="preserve">
    <value>Der letzte Auftrag wurde angehalten in Zeile </value>
  </data>
  <data name="mainPauseStream2" xml:space="preserve">
    <value>, \r\nWollen Sie den Job fortsetzen?</value>
  </data>
  <data name="mainStreamingActive" xml:space="preserve">
    <value>Das Streaming ist immer noch aktiv - drücke Stopp und versuche es erneut</value>
  </data>
  <data name="mainUnknownCode" xml:space="preserve">
    <value>Unbekannten G-Code auskommentiert: \r\n</value>
  </data>
  <data name="probingCancel1" xml:space="preserve">
    <value>Abtasten abgebrochen</value>
  </data>
  <data name="probingCancel2" xml:space="preserve">
    <value>Letzten Befehl verarbeiten</value>
  </data>
  <data name="probingProbingOn" xml:space="preserve">
    <value>Abtasten auf </value>
  </data>
  <data name="mainProgress" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="probingCenter" xml:space="preserve">
    <value>In die Mitte fahren</value>
  </data>
  <data name="probingFail1" xml:space="preserve">
    <value>Fehler: kein Kontakt</value>
  </data>
  <data name="probingFail2" xml:space="preserve">
    <value>Abtasten wird abgebrochen</value>
  </data>
  <data name="probingFinish" xml:space="preserve">
    <value>Fertig</value>
  </data>
  <data name="probingSetCenter" xml:space="preserve">
    <value>Setze Mitte</value>
  </data>
  <data name="probingTimeOut" xml:space="preserve">
    <value>Zeit überschritten</value>
  </data>
  <data name="serialClose" xml:space="preserve">
    <value>Schließen</value>
  </data>
  <data name="mainInfoErrorLine" xml:space="preserve">
    <value>Fehler vor Zeile</value>
  </data>
  <data name="mainInfoFinishCheck" xml:space="preserve">
    <value>Check G-Code beendet</value>
  </data>
  <data name="mainInfoFinishSend" xml:space="preserve">
    <value>Senden G-Code beendet</value>
  </data>
  <data name="mainLoadError3" xml:space="preserve">
    <value>Dateierweiterung nicht unterstützt '</value>
  </data>
  <data name="serialOpen" xml:space="preserve">
    <value>Öffnen</value>
  </data>
  <data name="mainSimuStart" xml:space="preserve">
    <value>Starte Pfadsimulation</value>
  </data>
  <data name="mainSimuStop" xml:space="preserve">
    <value>Stop Simulation</value>
  </data>
  <data name="statusStripeCheckCOM" xml:space="preserve">
    <value>Überprüfen Sie das COM-Fenster für weitere Informationen</value>
  </data>
  <data name="statusStripeClickKeys" xml:space="preserve">
    <value>Klicken Sie bei gedrückter Ctrl-Taste, um Abbildung auszuwählen. Alt-Klicken, um Gruppe auszuwählen. Oder klicken Sie auf XML-Tag</value>
  </data>
  <data name="statusStripeClickKeys2" xml:space="preserve">
    <value>Klicken Sie auf: Markieren Sie Abbildung; Control-Click: Gruppe markieren; Alt-Klick: GCode-Zeile anzeigen</value>
  </data>
  <data name="statusStripeDownKeys" xml:space="preserve">
    <value>Strg-Ab, um den ausgewählten Block 1 nach unten zu verschieben; Strg-Umschalt-Ab, um zum Ende zu gelangen</value>
  </data>
  <data name="statusStripeEditModeOn" xml:space="preserve">
    <value>Bearbeitungsmodus ein - Klicken Sie zum Abschluss in die 2D-Ansicht</value>
  </data>
  <data name="statusStripeFileLoad" xml:space="preserve">
    <value>Datei laden</value>
  </data>
  <data name="statusStripeFileNotFound" xml:space="preserve">
    <value>Datei nicht gefunden - aus Liste entfernen</value>
  </data>
  <data name="statusStripeGrblResetNeeded" xml:space="preserve">
    <value>Möglicherweise ist die serielle Schnittstelle gesperrt und ein Neustart von GRBL-Plotter ist erforderlich</value>
  </data>
  <data name="statusStripeResetNeeded" xml:space="preserve">
    <value>Möglicherweise ist ein Reset des Controllers erforderlich</value>
  </data>
  <data name="statusStripeStreamingStatusSaved" xml:space="preserve">
    <value>Streaming-Status und G-Code werden in '_lastProcessed.nc' gespeichert. Fortsetzung nach Programmneustart ist möglich.</value>
  </data>
  <data name="statusStripeUpKeys" xml:space="preserve">
    <value>Control-Up, um den ausgewählten Block 1 nach oben zu verschieben; Control-Shift-Up, um nach oben zu gelangen</value>
  </data>
  <data name="statusStripeSelectionMoved" xml:space="preserve">
    <value>Auswahl verschoben um</value>
  </data>
  <data name="statusStripeCheckUpdate" xml:space="preserve">
    <value>'Auf GitHub nach neuer GRBL-Plotter-Version suchen' - kann in [Setup - Programmsteuerung] deaktiviert werden.</value>
  </data>
</root>