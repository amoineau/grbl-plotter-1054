<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="grblAlarm" xml:space="preserve">
    <value>Alarm</value>
  </data>
  <data name="grblCheck" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="grblDoor" xml:space="preserve">
    <value>Door</value>
  </data>
  <data name="grblHold" xml:space="preserve">
    <value>Hold</value>
  </data>
  <data name="grblHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="grblIdle" xml:space="preserve">
    <value>Idle</value>
  </data>
  <data name="grblJog" xml:space="preserve">
    <value>Jog</value>
  </data>
  <data name="grblProbe" xml:space="preserve">
    <value>Probe</value>
  </data>
  <data name="grblRun" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="grblSleep" xml:space="preserve">
    <value>Sleep</value>
  </data>
  <data name="mainAttention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="mainHelpLanguage" xml:space="preserve">
    <value>Feel free to improove translation</value>
  </data>
  <data name="mainHotkeyError" xml:space="preserve">
    <value>File 'hotkeys.xml' not found, no hotkeys set!</value>
  </data>
  <data name="mainHotkeyError1" xml:space="preserve">
    <value>Unknown action:</value>
  </data>
  <data name="mainHotkeyError2" xml:space="preserve">
    <value>Error with Hotkey.xml</value>
  </data>
  <data name="mainInfoCheckCode" xml:space="preserve">
    <value>Check G-Code</value>
  </data>
  <data name="mainInfoErrorLine" xml:space="preserve">
    <value>Error before line</value>
  </data>
  <data name="mainInfoFinishCheck" xml:space="preserve">
    <value>Finish checking G-Code</value>
  </data>
  <data name="mainInfoFinishSend" xml:space="preserve">
    <value>Finish sending G-Code</value>
  </data>
  <data name="mainInfoKill" xml:space="preserve">
    <value>Press 'Kill Alarm' to proceed ('$X')</value>
  </data>
  <data name="mainInfoLaserModeOff" xml:space="preserve">
    <value>Laser Mode not active $32=0</value>
  </data>
  <data name="mainInfoLaserModeOn" xml:space="preserve">
    <value>Laser Mode active $32=1</value>
  </data>
  <data name="mainInfoPause" xml:space="preserve">
    <value>Pause streaming - press play (</value>
  </data>
  <data name="mainInfoProbing" xml:space="preserve">
    <value>Probing</value>
  </data>
  <data name="mainInfoResume" xml:space="preserve">
    <value>Press 'Resume' to proceed ('~')</value>
  </data>
  <data name="mainInfoSendCode" xml:space="preserve">
    <value>Send G-Code</value>
  </data>
  <data name="mainInfoStopStream" xml:space="preserve">
    <value>STOP streaming (</value>
  </data>
  <data name="mainInfoStopStream2" xml:space="preserve">
    <value>STOP streaming ( Line</value>
  </data>
  <data name="mainInfoToolChange" xml:space="preserve">
    <value>Tool change...</value>
  </data>
  <data name="mainInfoUndo" xml:space="preserve">
    <value>Undo last action</value>
  </data>
  <data name="mainInfoWaitIdle" xml:space="preserve">
    <value>Wait for IDLE, then pause (</value>
  </data>
  <data name="mainLimits1" xml:space="preserve">
    <value>Next move will exceed machine limits!\r</value>
  </data>
  <data name="mainLimits2" xml:space="preserve">
    <value>\r\n Press 'Ok' to move anyway</value>
  </data>
  <data name="mainLimits3" xml:space="preserve">
    <value>Graphics dimension exceeds machine dimension!\r\nTransformation is recommended to avoid damaging the machine!</value>
  </data>
  <data name="mainLoadError" xml:space="preserve">
    <value>Streaming must be stopped before loading new file</value>
  </data>
  <data name="mainLoadError1" xml:space="preserve">
    <value>File not found: '</value>
  </data>
  <data name="mainLoadError2" xml:space="preserve">
    <value>URL extension is not 'svg' or 'dxf'\r\nTry SVG import anyway, but without setting 'Recent File' list.</value>
  </data>
  <data name="mainLoadError3" xml:space="preserve">
    <value>File extension not supported '</value>
  </data>
  <data name="mainParseError" xml:space="preserve">
    <value>Not a valid number</value>
  </data>
  <data name="mainParseError1" xml:space="preserve">
    <value>Not a valid number, set line to 0</value>
  </data>
  <data name="mainPauseStream" xml:space="preserve">
    <value>Pause streaming - press play</value>
  </data>
  <data name="mainPauseStream1" xml:space="preserve">
    <value>The last job was paused at line</value>
  </data>
  <data name="mainPauseStream2" xml:space="preserve">
    <value>,\r\ndo you want to continue the job?</value>
  </data>
  <data name="mainProblem" xml:space="preserve">
    <value>Problem</value>
  </data>
  <data name="mainProgress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="mainQuit" xml:space="preserve">
    <value>Quit GRBL-Plotter?</value>
  </data>
  <data name="mainSimuSpeed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="mainSimuStart" xml:space="preserve">
    <value>Start path simulation</value>
  </data>
  <data name="mainSimuStop" xml:space="preserve">
    <value>Stop simulation</value>
  </data>
  <data name="mainStreamingActive" xml:space="preserve">
    <value>Streaming is still active - press Stop and try again</value>
  </data>
  <data name="mainToolChange" xml:space="preserve">
    <value>Tool / Pen change!</value>
  </data>
  <data name="mainToolChange1" xml:space="preserve">
    <value>Tool change needed:\r</value>
  </data>
  <data name="mainToolChange2" xml:space="preserve">
    <value>\rpress start to continue.</value>
  </data>
  <data name="mainUnknownCode" xml:space="preserve">
    <value>Fixed some unknown G-Code:\r\n</value>
  </data>
  <data name="probingCancel1" xml:space="preserve">
    <value>Probing canceled</value>
  </data>
  <data name="probingCancel2" xml:space="preserve">
    <value>Process last command</value>
  </data>
  <data name="probingCenter" xml:space="preserve">
    <value>Move to center</value>
  </data>
  <data name="probingFail1" xml:space="preserve">
    <value>Fail: no contact</value>
  </data>
  <data name="probingFail2" xml:space="preserve">
    <value>Cancel probing</value>
  </data>
  <data name="probingFinish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="probingProbingOn" xml:space="preserve">
    <value>Probing on</value>
  </data>
  <data name="probingSetCenter" xml:space="preserve">
    <value>Set center </value>
  </data>
  <data name="probingTimeOut" xml:space="preserve">
    <value>Time out</value>
  </data>
  <data name="serialClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="serialCloseError" xml:space="preserve">
    <value>Serial Connection is needed.\r\nClose main window instead</value>
  </data>
  <data name="serialOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="statusStripeCheckCOM" xml:space="preserve">
    <value>Check COM-window for further information</value>
  </data>
  <data name="statusStripeClickKeys" xml:space="preserve">
    <value>Control-Click to select Figure; Alt-Click to select Group; Or click on XML-Tag</value>
  </data>
  <data name="statusStripeClickKeys2" xml:space="preserve">
    <value>Click: mark Figure; Control-Click: mark Group; Alt-Click: show GCode line</value>
  </data>
  <data name="statusStripeDownKeys" xml:space="preserve">
    <value>Control-Down to move selected Block one down; Control-Shift-Down to move to end</value>
  </data>
  <data name="statusStripeEditModeOn" xml:space="preserve">
    <value>Edit mode on - click into 2D view to finish</value>
  </data>
  <data name="statusStripeFileLoad" xml:space="preserve">
    <value>File loading</value>
  </data>
  <data name="statusStripeFileNotFound" xml:space="preserve">
    <value>File not found - remove from list</value>
  </data>
  <data name="statusStripeGrblResetNeeded" xml:space="preserve">
    <value>Perhaps serial port is locked and a restart of GRBL-Plotter is needed</value>
  </data>
  <data name="statusStripeResetNeeded" xml:space="preserve">
    <value>Probably a reset of the controller is needed</value>
  </data>
  <data name="statusStripeSelectionMoved" xml:space="preserve">
    <value>Selection moved by</value>
  </data>
  <data name="statusStripeStreamingStatusSaved" xml:space="preserve">
    <value>Streaming status and G-Code are saved in '_lastProcessed.nc'. Continuation after program restart is possible.</value>
  </data>
  <data name="statusStripeUpKeys" xml:space="preserve">
    <value>Control-Up to move selected Block one up; Control-Shift-Up to move to top</value>
  </data>
  <data name="statusStripeCheckUpdate" xml:space="preserve">
    <value>'Check for new GRBL-Plotter release on GitHub' - can be disabled in [Setup - Program control] </value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
</root>