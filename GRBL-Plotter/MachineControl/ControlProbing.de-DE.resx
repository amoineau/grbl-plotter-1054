<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cBZProbing.ToolTip" xml:space="preserve">
    <value>Z abtasten nach Kanten- oder Eckenabtastung</value>
  </data>
  <data name="$this.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Wkzg. Durchmesser</value>
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value>Durchmesser der Tastspitze oder des Fräserkopfes zur Berechnung der Nullposition</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Max. Abtastfahrweg</value>
  </data>
  <data name="label2.ToolTip" xml:space="preserve">
    <value>Maximale Entfernung, um eine Kante zu finden</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Abtastgeschwindigkeit</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Tastplattendicke</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Offset zur abgetasteten Nullposition, verursacht durch Tastplatte, Endmaß oder Aluminiumfolie</value>
  </data>
  <data name="cBZProbing.Text" xml:space="preserve">
    <value>Auch Z abtasten</value>
  </data>
  <data name="gBHardware.Text" xml:space="preserve">
    <value>Hardware Abmessungen</value>
  </data>
  <data name="nUDDiameter.ToolTip" xml:space="preserve">
    <value>Durchmesser der Tastspitze oder des Fräserkopfes zur Berechnung der Nullposition</value>
  </data>
  <data name="nUDOffsetX.ToolTip" xml:space="preserve">
    <value>Offset to probed zero position, caused by touch plate, gage block or aluminum foil</value>
  </data>
  <data name="nUDOffsetY.ToolTip" xml:space="preserve">
    <value>Offset to probed zero position, caused by touch plate, gage block or aluminum foil</value>
  </data>
  <data name="nUDOffsetZ.ToolTip" xml:space="preserve">
    <value>Offset to probed zero position, caused by touch plate, gage block or aluminum foil</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Sicherheitsabstand</value>
  </data>
  <data name="label14.ToolTip" xml:space="preserve">
    <value>Fahre zurück um diesen Wert</value>
  </data>
  <data name="nUDWorkpieceDiameter.ToolTip" xml:space="preserve">
    <value>Durchmesser des Werkstücks zur Ermittlung des Tastabstands</value>
  </data>
  <data name="lblProbeFinal.ToolTip" xml:space="preserve">
    <value>Fahre zum Schluß zu dieser Position</value>
  </data>
  <data name="nUDProbeFinalZ.ToolTip" xml:space="preserve">
    <value>Fahre zum Schluß zu dieser Position</value>
  </data>
  <data name="nUDProbeFinalY.ToolTip" xml:space="preserve">
    <value>Fahre zum Schluß zu dieser Position</value>
  </data>
  <data name="nUDProbeFinalX.ToolTip" xml:space="preserve">
    <value>Fahre zum Schluß zu dieser Position</value>
  </data>
  <data name="nUDProbeSaveZ.ToolTip" xml:space="preserve">
    <value>Fahre zurück um diesen Wert</value>
  </data>
  <data name="nUDProbeSaveY.ToolTip" xml:space="preserve">
    <value>Fahre zurück um diesen Wert</value>
  </data>
  <data name="nUDProbeSaveX.ToolTip" xml:space="preserve">
    <value>Fahre zurück um diesen Wert</value>
  </data>
  <data name="nUDProbeTravelZ.ToolTip" xml:space="preserve">
    <value>Maximale Entfernung, um eine Kante zu finden</value>
  </data>
  <data name="nUDProbeTravelY.ToolTip" xml:space="preserve">
    <value>Maximale Entfernung, um eine Kante zu finden</value>
  </data>
  <data name="nUDProbeTravelX.ToolTip" xml:space="preserve">
    <value>Maximale Entfernung, um eine Kante zu finden</value>
  </data>
  <data name="rBCF2.ToolTip" xml:space="preserve">
    <value>Mitte finden und setzen von 0; 0
Z up = Z start + Z probing
Abschließend in die Mitte fahren</value>
  </data>
  <data name="rBCF1.ToolTip" xml:space="preserve">
    <value>Mitte finden und 0; 0 setzen
Abschließend wird die Mitte angefahren</value>
  </data>
  <data name="gBMovement.Text" xml:space="preserve">
    <value>Abtastbewegung</value>
  </data>
  <data name="btnGetAngleEF.Text" xml:space="preserve">
    <value>G-Code drehen</value>
  </data>
  <data name="btnGetAngleEF.ToolTip" xml:space="preserve">
    <value>Der Korrekturwinkel wird anhand der vertikalen (X-Messung) oder horizontalen Kante (Y-Messung) des Werkstücks berechnet</value>
  </data>
  <data name="tBAngle.ToolTip" xml:space="preserve">
    <value>Der Korrekturwinkel wird anhand der vertikalen (X-Messung) oder horizontalen Kante (Y-Messung) des Werkstücks berechnet</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Gemessener Korrekturwinkel:</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>Wählen Sie die Kante für die zu erkennende Ecke aus.
Die Werkzeugspitze vor die Kante legen.
In den Ecken wird zuerst X und dann Y geprüft.
Z wird zuletzt geprüft.
Sondenkante ein zweites Mal an einer anderen Position, um den Winkel zu bestimmen.</value>
  </data>
  <data name="lblEFProgressInfo.Text" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="btnStartEF.Text" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="lblEFProgress.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="btnCancelEF.Text" xml:space="preserve">
    <value>Abbruch</value>
  </data>
  <data name="rB5.Text" xml:space="preserve">
    <value>Nur Z</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Kantenfinder</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Mitenfinder</value>
  </data>
  <data name="btnSaveTL.Text" xml:space="preserve">
    <value>Fahre Z zur sicheren Position </value>
  </data>
  <data name="btnSaveTL.ToolTip" xml:space="preserve">
    <value>Verwendet absolute Koordinaten G90</value>
  </data>
  <data name="cBSetCoordTL.Text" xml:space="preserve">
    <value>G92 Z-Koordinate für das 1. Werkzeug verwenden</value>
  </data>
  <data name="cBSetCoordTL.ToolTip" xml:space="preserve">
    <value>G92 Z einstellen</value>
  </data>
  <data name="btnClearTL.Text" xml:space="preserve">
    <value>Wkzg.längenkorr. löschen</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>1. Werkzeuglänge für 1. Werkzeug ermitteln
2. Mit G92 Z Null setzen
3. Nach dem Werkzeugwechsel einfach die Werkzeuglänge erneut messen. Die Z-Koordinate wird dann korrigiert.

Nach der Werkzeuglängentastung:
Z fährt in die Ausgangsposition zurück</value>
  </data>
  <data name="lblTLProgressInfo.Text" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="btnStartTL.Text" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="lblTLProgress.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>Abbruch</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>Werkzeuglänge</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>Innenkontur:
Setzen Sie die Werkzeugspitze fast zentriert in das Loch des Werkstücks.
Z wird nicht bewegt.

Außenkontur:
Setzen Sie die Werkzeugspitze wie bei der Kantenerkennung auf die linke Seite des Werkstücks</value>
  </data>
  <data name="lblCFProgressInfo.Text" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="btnStartCF.Text" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="lblCFProgress.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="btnCancelCF.Text" xml:space="preserve">
    <value>Abbruch</value>
  </data>
  <data name="gBCoordinates.Text" xml:space="preserve">
    <value>Koordinaten</value>
  </data>
  <data name="rBProbeCoord1.Text" xml:space="preserve">
    <value>Verwendung von G10 L2 P0 - setzen der Koordinate (G54-G59)</value>
  </data>
  <data name="rBProbeCoord2.Text" xml:space="preserve">
    <value>Verwendung von G92</value>
  </data>
  <data name="btnProbeCoordClear.Text" xml:space="preserve">
    <value>G92 zurücksetzen</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Abtastung und Werkzeuglängenkorrektur</value>
  </data>
  <data name="cBSetCenterZero.Text" xml:space="preserve">
    <value>Wkzg.mitte auf Null setzen</value>
  </data>
  <data name="cBSetCenterZero.ToolTip" xml:space="preserve">
    <value>Wenn aktiviert, definiert die Werkzeugmitte (Messtaster / Fräser) die Nullposition.
Normalerweise wird der Rand des Werkzeugs (Messtaster / Fräser) zum Definieren von Null verwendet.</value>
  </data>
  <data name="lblProbeFinal.Text" xml:space="preserve">
    <value>Endposition nach dem Antasten</value>
  </data>
  <data name="btnCancelTL.Text" xml:space="preserve">
    <value>Abbruch</value>
  </data>
</root>