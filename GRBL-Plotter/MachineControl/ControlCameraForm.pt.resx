<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="teachScalingToolStripMenuItem.Text" xml:space="preserve">
    <value>Teach Scaling</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>Rotação da imagem</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1) mude para 'Ferramenta coord.' (G54)
2) Zero X, posição Y
3) Marque a posição da ferramenta (em X = 0, Y = 0) com a ferramenta na peça de trabalho
4) Mova o marcador abaixo do centro da vista da câmera
5) Ensine a posição real como deslocamento
6) mude para 'Cam coord.' (G59) - mostra agora X = 0, Y = 0
</value>
  </data>
  <data name="btnApplyAngle.Text" xml:space="preserve">
    <value>Aplicar ângulo ao GCode</value>
  </data>
  <data name="teachScalingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1) Plotter doméstico
2) mova a câmera para a posição superior
3) clique na imagem para indicar a distância do raio superior
4) mova a câmera para a posição inferior
5) clique na imagem para indicar a distância do raio inferior
</value>
  </data>
  <data name="toolStripTextBox2.ToolTipText" xml:space="preserve">
    <value>em unidades GRBL (mm ou polegada)</value>
  </data>
  <data name="showOverlayGraphicsToolStripMenuItem.Text" xml:space="preserve">
    <value>Mostrar gráficos de sobreposição</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Câmera</value>
  </data>
  <data name="btnCamCoordTool.Text" xml:space="preserve">
    <value>Ferramenta coord.</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Defina XY = 0; 0 com o ponteiro do mouse e clique com o botão esquerdo</value>
  </data>
  <data name="toolStripTextBox1.ToolTipText" xml:space="preserve">
    <value>Girar imagem de vídeo - inserir ângulo</value>
  </data>
  <data name="teachRadiusBottomToolStripMenuItem.Text" xml:space="preserve">
    <value>Definir raio de ensino inferior</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Ensinar a visualização da câmera</value>
  </data>
  <data name="cBCamCoordMove.ToolTip" xml:space="preserve">
    <value>Aplicar deslocamento da câmera aos gráficos</value>
  </data>
  <data name="teachToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1) Zero X, posição Y
2) Marque a posição da ferramenta (em X = 0, Y = 0)
3) Mova-se até o marcador estar no centro da visão da câmera
4) Ensine a posição real como deslocamento
</value>
  </data>
  <data name="setZeroToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Definir zero de coordenadas com deslocamento da câmera</value>
  </data>
  <data name="btnCamCoordCam.ToolTip" xml:space="preserve">
    <value>Mover a posição atual da câmera abaixo de Ferramenta</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Defina XY = 0; 0</value>
  </data>
  <data name="lblCenterPos.Text" xml:space="preserve">
    <value>Nenhuma forma encontrada</value>
  </data>
  <data name="btnAutoCenter.Text" xml:space="preserve">
    <value>Círculo vermelho central</value>
  </data>
  <data name="toolStripTextBox3.ToolTipText" xml:space="preserve">
    <value>em unidades GRBL (mm ou polegada)</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Ângulo</value>
  </data>
  <data name="upperPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Ensinar a visualização da câmera</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>Configuração</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Selecionar conjunto de filtros</value>
  </data>
  <data name="upperPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Ensinar Posição Superior</value>
  </data>
  <data name="cBShapeDetection.Text" xml:space="preserve">
    <value>Reconhecimento de forma</value>
  </data>
  <data name="camSourceToolStripMenuItem.Text" xml:space="preserve">
    <value>Fonte de Vídeo</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Deslocamento / Movimento da Câmera</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Girar imagem de vídeo - inserir ângulo</value>
  </data>
  <data name="setZeroToolStripMenuItem.Text" xml:space="preserve">
    <value>Definir deslocamento do sistema de coordenadas</value>
  </data>
  <data name="teachToolStripMenuItem.Text" xml:space="preserve">
    <value>Ensinar deslocamento da câmera</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Câmera</value>
  </data>
  <data name="compensateAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>Compensar ângulo e escala</value>
  </data>
  <data name="btnApplyAngle.ToolTip" xml:space="preserve">
    <value>Use o botão direito do mouse para medir o ângulo.
Pressione o botão para transformar o código G com o ângulo medido.
</value>
  </data>
  <data name="crossHairsToolStripMenuItem.Text" xml:space="preserve">
    <value>Mira</value>
  </data>
  <data name="colorsToolStripMenuItem.Text" xml:space="preserve">
    <value>Cores</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Ensinar Posição Inferior</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>A medida</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Alinhamento automático</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.Text" xml:space="preserve">
    <value>Teach Offset</value>
  </data>
  <data name="teachRadiusTopToolStripMenuItem.Text" xml:space="preserve">
    <value>Definir o raio de ensino superior</value>
  </data>
  <data name="lblAngle.ToolTip" xml:space="preserve">
    <value>Ângulo medido</value>
  </data>
  <data name="btnCamCoordTool.ToolTip" xml:space="preserve">
    <value>Mover a posição atual da ferramenta abaixo da câmera</value>
  </data>
  <data name="camSourceToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Selecione a fonte da câmera.</value>
  </data>
  <data name="moveMarkerToCenterToolStripMenuItem.Text" xml:space="preserve">
    <value>Definir pos. Atual ao marcador pos.</value>
  </data>
  <data name="teachMarkerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Defina XY = posição do marcador</value>
  </data>
</root>