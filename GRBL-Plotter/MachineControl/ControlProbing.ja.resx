<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>プローブ/カッター直径</value>
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value>ゼロ位置を計算するためのプローブチップまたはカッターヘッドの直径</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>最大 プロービング距離</value>
  </data>
  <data name="label2.ToolTip" xml:space="preserve">
    <value>移動する最大距離、エッジを見つける</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>送り速度のプロービング</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>タッチプレート寸法</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>タッチプレート、ゲージブロック、またはアルミ箔が原因で、プローブされたゼロ位置へのオフセット</value>
  </data>
  <data name="cBZProbing.Text" xml:space="preserve">
    <value>プローブZも</value>
  </data>
  <data name="cBZProbing.ToolTip" xml:space="preserve">
    <value>エッジまたはコーナーのプローブに成功した後、最後にプローブZ</value>
  </data>
  <data name="nUDDiameter.ToolTip" xml:space="preserve">
    <value>ゼロ位置を計算するためのプローブチップまたはカッターヘッドの直径</value>
  </data>
  <data name="nUDOffsetX.ToolTip" xml:space="preserve">
    <value>ゲージブロックまたはアルミ箔が原因でプローブされたゼロ位置へのオフセット</value>
  </data>
  <data name="nUDOffsetY.ToolTip" xml:space="preserve">
    <value>ゲージブロックまたはアルミ箔が原因でプローブされたゼロ位置へのオフセット</value>
  </data>
  <data name="nUDOffsetZ.ToolTip" xml:space="preserve">
    <value>ゲージブロックまたはアルミ箔が原因でプローブされたゼロ位置へのオフセット</value>
  </data>
  <data name="gBHardware.Text" xml:space="preserve">
    <value>ハードウェア寸法</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>距離を節約</value>
  </data>
  <data name="label14.ToolTip" xml:space="preserve">
    <value>プロービング成功後にこの距離だけ後退する</value>
  </data>
  <data name="lblProbeFinal.Text" xml:space="preserve">
    <value>プロービング後の最終位置</value>
  </data>
  <data name="lblProbeFinal.ToolTip" xml:space="preserve">
    <value>最後にこの位置に移動します</value>
  </data>
  <data name="nUDWorkpieceDiameter.ToolTip" xml:space="preserve">
    <value>プローブ距離を決定するワークピースの直径</value>
  </data>
  <data name="nUDProbeFinalZ.ToolTip" xml:space="preserve">
    <value>最後にこの位置に移動します</value>
  </data>
  <data name="nUDProbeFinalY.ToolTip" xml:space="preserve">
    <value>最後にこの位置に移動します</value>
  </data>
  <data name="nUDProbeFinalX.ToolTip" xml:space="preserve">
    <value>最後にこの位置に移動します</value>
  </data>
  <data name="nUDProbeSaveZ.ToolTip" xml:space="preserve">
    <value>プロービング成功後にこの距離だけ後退する</value>
  </data>
  <data name="nUDProbeSaveY.ToolTip" xml:space="preserve">
    <value>プロービング成功後にこの距離だけ後退する</value>
  </data>
  <data name="nUDProbeSaveX.ToolTip" xml:space="preserve">
    <value>プロービング成功後にこの距離だけ後退する</value>
  </data>
  <data name="nUDProbeTravelZ.ToolTip" xml:space="preserve">
    <value>移動する最大距離、エッジを見つける</value>
  </data>
  <data name="nUDProbeTravelY.ToolTip" xml:space="preserve">
    <value>移動する最大距離、エッジを見つける</value>
  </data>
  <data name="nUDProbeTravelX.ToolTip" xml:space="preserve">
    <value>移動する最大距離、エッジを見つける</value>
  </data>
  <data name="rBCF2.ToolTip" xml:space="preserve">
    <value>中心を見つけて0; 0を設定
Z up = Z start + Zプローブ
最後に中央に移動</value>
  </data>
  <data name="rBCF1.ToolTip" xml:space="preserve">
    <value>中心を見つけて0; 0を設定
最後に中央に移動</value>
  </data>
  <data name="btnGetAngleEF.Text" xml:space="preserve">
    <value>Gコードを角度で回転</value>
  </data>
  <data name="btnGetAngleEF.ToolTip" xml:space="preserve">
    <value>補正角度は、ワークの垂直（Xプローブ）または水平エッジ（Yプローブ）から計算されます</value>
  </data>
  <data name="tBAngle.ToolTip" xml:space="preserve">
    <value>補正角度は、ワークの垂直（Xプローブ）または水平エッジ（Yプローブ）から計算されます</value>
  </data>
  <data name="cBSetCoordTL.Text" xml:space="preserve">
    <value>G92 Z座標を設定します。 最初のツール用</value>
  </data>
  <data name="cBSetCoordTL.ToolTip" xml:space="preserve">
    <value>G92 Zを設定</value>
  </data>
  <data name="btnSaveTL.Text" xml:space="preserve">
    <value>Zを移動して位置を保存します。</value>
  </data>
  <data name="btnSaveTL.ToolTip" xml:space="preserve">
    <value>G90絶対座標を使用</value>
  </data>
  <data name="cBSetCenterZero.Text" xml:space="preserve">
    <value>工具中心をゼロに設定</value>
  </data>
  <data name="cBSetCenterZero.ToolTip" xml:space="preserve">
    <value>チェックすると、ツール（プローブ/カッター）の中心がゼロ位置を定義します。
通常、ゼロの定義にはツールの境界（プローブ/カッター）が使用されます。</value>
  </data>
  <data name="gBMovement.Text" xml:space="preserve">
    <value>プローブの動き</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>測定された補正角度：</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>検出するコーナーのエッジを選択します。
先端の前にツールチップを置きます。
コーナーでは、Xが最初にプローブされ、次にYがプローブされます。
Zは最後にプローブされます。
角度を取得するために、別の位置で2回目のエッジをプローブします。</value>
  </data>
  <data name="lblEFProgressInfo.Text" xml:space="preserve">
    <value>進捗</value>
  </data>
  <data name="btnStartEF.Text" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="btnCancelEF.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="rB5.Text" xml:space="preserve">
    <value>Zのみ</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>エッジファインダー</value>
  </data>
  <data name="label22.Text" xml:space="preserve">
    <value>ワーク径</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>内側の輪郭：
工具の先端をワークの穴のほぼ中央に置きます。
Zは移動しません。

外輪郭：
エッジ検出に関しては、ワークピースの左側にツールチップを置きます</value>
  </data>
  <data name="lblCFProgressInfo.Text" xml:space="preserve">
    <value>進捗</value>
  </data>
  <data name="btnStartCF.Text" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="btnCancelCF.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>センターファインダー</value>
  </data>
  <data name="btnClearTL.Text" xml:space="preserve">
    <value>工具長オフセットのクリア</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>1.最初の工具の工具長を取得する
2. G92を使用してZをゼロに設定します
3.ツールの変更後、再度ツールの長さを測定するだけで、Z座標が修正されます。

工具長の調査後：
Zは開始位置に戻ります</value>
  </data>
  <data name="lblTLProgressInfo.Text" xml:space="preserve">
    <value>進捗</value>
  </data>
  <data name="btnStartTL.Text" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="btnCancelTL.Text" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>工具長</value>
  </data>
  <data name="btnProbeCoordClear.Text" xml:space="preserve">
    <value>クリアG92</value>
  </data>
  <data name="rBProbeCoord2.Text" xml:space="preserve">
    <value>G92を使用する</value>
  </data>
  <data name="rBProbeCoord1.Text" xml:space="preserve">
    <value>G10 L2 P0を使用-座標を設定します。 （G54-G59）</value>
  </data>
  <data name="gBCoordinates.Text" xml:space="preserve">
    <value>座標</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>プローブと工具長オフセット</value>
  </data>
</root>