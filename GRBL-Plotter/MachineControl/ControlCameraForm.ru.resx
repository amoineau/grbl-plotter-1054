<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="moveMarkerToCenterToolStripMenuItem.Text" xml:space="preserve">
    <value>Установить текущую позицию в качестве маркера поз.</value>
  </data>
  <data name="compensateAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>Компенсировать угол и масштаб</value>
  </data>
  <data name="showOverlayGraphicsToolStripMenuItem.Text" xml:space="preserve">
    <value>Показать оверлейную графику</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>зум</value>
  </data>
  <data name="camSourceToolStripMenuItem.Text" xml:space="preserve">
    <value>Источник видео</value>
  </data>
  <data name="camSourceToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Выберите источник камеры.</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>Поворот изображения</value>
  </data>
  <data name="teachRadiusTopToolStripMenuItem.Text" xml:space="preserve">
    <value>Установить радиус обучения сверху</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Научить нижнее положение</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Научить вид с камеры</value>
  </data>
  <data name="teachRadiusBottomToolStripMenuItem.Text" xml:space="preserve">
    <value>Установить радиус обучения внизу</value>
  </data>
  <data name="teachScalingToolStripMenuItem.Text" xml:space="preserve">
    <value>Научить масштабирование</value>
  </data>
  <data name="teachScalingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1) Домашний плоттер
2) переместить камеру в верхнее положение
3) нажмите на картинку, чтобы узнать расстояние от верхнего радиуса
4) переместите камеру в нижнее положение
5) нажмите на картинку, чтобы узнать расстояние нижнего радиуса</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.Text" xml:space="preserve">
    <value>Учить офсет</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1) переключиться на «Координата инструмента». (G54)
2) Ноль X, позиция Y
3) Отметьте положение инструмента (при X = 0, Y = 0) с помощью инструмента на заготовке.
4) Переместите маркер ниже центра обзора камеры
5) Изучите фактическое положение как смещение
6) переключиться на «Координаты кулачка». (G59) - теперь показывает X = 0, Y = 0</value>
  </data>
  <data name="crossHairsToolStripMenuItem.Text" xml:space="preserve">
    <value>十字线...</value>
  </data>
  <data name="colorsToolStripMenuItem.Text" xml:space="preserve">
    <value>Цвета</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>Настроить</value>
  </data>
  <data name="teachMarkerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Установить XY = положение маркера</value>
  </data>
  <data name="setZeroToolStripMenuItem.Text" xml:space="preserve">
    <value>Установить смещение системы координат</value>
  </data>
  <data name="setZeroToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Установить координату ноль со смещением камеры</value>
  </data>
  <data name="btnApplyAngle.Text" xml:space="preserve">
    <value>Применить угол к GCode</value>
  </data>
  <data name="btnApplyAngle.ToolTip" xml:space="preserve">
    <value>Используйте правую кнопку мыши, чтобы измерить угол.
Нажмите кнопку, чтобы преобразовать G-Code с измеренным углом.</value>
  </data>
  <data name="btnCamCoordTool.ToolTip" xml:space="preserve">
    <value>Переместить текущее положение инструмента ниже камеры</value>
  </data>
  <data name="cBCamCoordMove.ToolTip" xml:space="preserve">
    <value>Применить смещение камеры к графике</value>
  </data>
  <data name="lblAngle.ToolTip" xml:space="preserve">
    <value>Измеренный угол</value>
  </data>
  <data name="btnCamCoordCam.ToolTip" xml:space="preserve">
    <value>Переместить текущую позицию камеры ниже инструмента</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>камера</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Смещение камеры / движение</value>
  </data>
  <data name="lblCenterPos.Text" xml:space="preserve">
    <value>Форма не найдена</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>угол</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Мера</value>
  </data>
  <data name="cBShapeDetection.Text" xml:space="preserve">
    <value>Распознавание формы</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Выберите набор фильтров</value>
  </data>
  <data name="btnAutoCenter.Text" xml:space="preserve">
    <value>Центр красный круг</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Автоматическое выравнивание</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>камера</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Повернуть видео - введите угол</value>
  </data>
  <data name="upperPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Учить верхнюю позицию</value>
  </data>
  <data name="upperPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Научить вид с камеры</value>
  </data>
  <data name="teachToolStripMenuItem.Text" xml:space="preserve">
    <value>Обучить камеру смещению</value>
  </data>
  <data name="teachToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1) Ноль X, позиция Y
2) Отметить положение инструмента (при X = 0, Y = 0)
3) Двигайтесь, пока маркер не окажется в центре обзора камеры
4) Изучите фактическое положение как смещение</value>
  </data>
  <data name="toolStripTextBox1.ToolTipText" xml:space="preserve">
    <value>Повернуть видео - введите угол</value>
  </data>
  <data name="toolStripTextBox2.ToolTipText" xml:space="preserve">
    <value>в единицах GRBL (мм или дюйм)</value>
  </data>
  <data name="toolStripTextBox3.ToolTipText" xml:space="preserve">
    <value>в единицах GRBL (мм или дюйм)</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Установите XY = 0; 0 с помощью указателя мыши и щелчка левой кнопкой мыши</value>
  </data>
</root>