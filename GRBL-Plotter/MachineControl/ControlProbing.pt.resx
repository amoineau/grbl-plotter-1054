<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Sonda / diâmetro do cortador</value>
  </data>
  <data name="label1.ToolTip" xml:space="preserve">
    <value>Diâmetro da ponta de sondagem ou da cabeça do cortador para calcular a posição zero</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Máx. Distância de sondagem</value>
  </data>
  <data name="label2.ToolTip" xml:space="preserve">
    <value>Distância máxima para se mover, para encontrar uma borda</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Taxa de avanço de sondagem</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Dimensão da placa de toque</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Deslocamento para a posição zero sondada, causada por placa de toque, bloco de medição ou folha de alumínio</value>
  </data>
  <data name="cBZProbing.Text" xml:space="preserve">
    <value>A sonda Z também</value>
  </data>
  <data name="cBZProbing.ToolTip" xml:space="preserve">
    <value>Teste Z finalmente, após uma sondagem bem-sucedida na borda ou no canto</value>
  </data>
  <data name="nUDDiameter.ToolTip" xml:space="preserve">
    <value>Diâmetro da ponta de sondagem ou da cabeça do cortador para calcular a posição zero</value>
  </data>
  <data name="nUDOffsetX.ToolTip" xml:space="preserve">
    <value>Deslocamento para a posição zero sondada, causada por bloco de medição ou folha de alumínio</value>
  </data>
  <data name="nUDOffsetY.ToolTip" xml:space="preserve">
    <value>Deslocamento para a posição zero sondada, causada por bloco de medição ou folha de alumínio</value>
  </data>
  <data name="nUDOffsetZ.ToolTip" xml:space="preserve">
    <value>Deslocamento para a posição zero sondada, causada por bloco de medição ou folha de alumínio</value>
  </data>
  <data name="gBHardware.Text" xml:space="preserve">
    <value>Dimensões de hardware</value>
  </data>
  <data name="label14.Text" xml:space="preserve">
    <value>Salvar distância</value>
  </data>
  <data name="label14.ToolTip" xml:space="preserve">
    <value>Retraia por essa distância após a verificação do sucesso</value>
  </data>
  <data name="lblProbeFinal.Text" xml:space="preserve">
    <value>Posição final após sondagem</value>
  </data>
  <data name="lblProbeFinal.ToolTip" xml:space="preserve">
    <value>Finalmente, vá para esta posição</value>
  </data>
  <data name="nUDWorkpieceDiameter.ToolTip" xml:space="preserve">
    <value>Diâmetro da peça de trabalho para determinar a distância de apalpação</value>
  </data>
  <data name="nUDProbeFinalZ.ToolTip" xml:space="preserve">
    <value>Finalmente, vá para esta posição</value>
  </data>
  <data name="nUDProbeFinalY.ToolTip" xml:space="preserve">
    <value>Finalmente, vá para esta posição</value>
  </data>
  <data name="nUDProbeFinalX.ToolTip" xml:space="preserve">
    <value>Finalmente, vá para esta posição</value>
  </data>
  <data name="nUDProbeSaveZ.ToolTip" xml:space="preserve">
    <value>Retraia por essa distância após a verificação do sucesso</value>
  </data>
  <data name="nUDProbeSaveY.ToolTip" xml:space="preserve">
    <value>Retraia por essa distância após a verificação do sucesso</value>
  </data>
  <data name="nUDProbeSaveX.ToolTip" xml:space="preserve">
    <value>Retraia por essa distância após a verificação do sucesso</value>
  </data>
  <data name="nUDProbeTravelZ.ToolTip" xml:space="preserve">
    <value>Distância máxima para se mover, para encontrar uma borda</value>
  </data>
  <data name="nUDProbeTravelY.ToolTip" xml:space="preserve">
    <value>Distância máxima para se mover, para encontrar uma borda</value>
  </data>
  <data name="nUDProbeTravelX.ToolTip" xml:space="preserve">
    <value>Distância máxima para se mover, para encontrar uma borda</value>
  </data>
  <data name="rBCF2.ToolTip" xml:space="preserve">
    <value>Encontre o centro e defina 0; 0
Z up = Z start + Z sondagem
Finalmente, vá para o centro
</value>
  </data>
  <data name="rBCF1.ToolTip" xml:space="preserve">
    <value>Encontre o centro e defina 0; 0
Finalmente, vá para o centro
</value>
  </data>
  <data name="btnGetAngleEF.Text" xml:space="preserve">
    <value>Gire o código G pelo ângulo</value>
  </data>
  <data name="btnGetAngleEF.ToolTip" xml:space="preserve">
    <value>O ângulo de correção será calculado na vertical (sondagem X) ou na borda horizontal (sondagem Y) da peça
</value>
  </data>
  <data name="tBAngle.ToolTip" xml:space="preserve">
    <value>O ângulo de correção será calculado na vertical (sondagem X) ou na borda horizontal (sondagem Y) da peça</value>
  </data>
  <data name="cBSetCoordTL.Text" xml:space="preserve">
    <value>Defina G92 Z coord. para a primeira ferramenta</value>
  </data>
  <data name="cBSetCoordTL.ToolTip" xml:space="preserve">
    <value>Conjunto G92 Z</value>
  </data>
  <data name="btnSaveTL.Text" xml:space="preserve">
    <value>Mova Z para salvar a pos.</value>
  </data>
  <data name="btnSaveTL.ToolTip" xml:space="preserve">
    <value>Use a coordenada absoluta G90</value>
  </data>
  <data name="cBSetCenterZero.Text" xml:space="preserve">
    <value>Defina o centro da ferramenta como zero</value>
  </data>
  <data name="cBSetCenterZero.ToolTip" xml:space="preserve">
    <value>Se marcado, o centro da ferramenta (sonda / cortador) define a posição zero.</value>
  </data>
  <data name="gBMovement.Text" xml:space="preserve">
    <value>Movimento da sonda</value>
  </data>
  <data name="label20.Text" xml:space="preserve">
    <value>Ângulo de correção medido:</value>
  </data>
  <data name="label19.Text" xml:space="preserve">
    <value>Selecione egde ou canto para detectar.
Coloque a ponta da ferramenta na frente da borda.
Nos cantos, X será testado primeiro e depois Y.
Z será testado por último.

Borda da sonda uma segunda vez em outra posição para obter ângulo.
</value>
  </data>
  <data name="lblEFProgressInfo.Text" xml:space="preserve">
    <value>Progresso</value>
  </data>
  <data name="btnStartEF.Text" xml:space="preserve">
    <value>Começar</value>
  </data>
  <data name="btnCancelEF.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="rB5.Text" xml:space="preserve">
    <value>Apenas Z</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>Edge finder</value>
  </data>
  <data name="label21.Text" xml:space="preserve">
    <value>Contorno interno:
Coloque a ponta da ferramenta dentro do orifício da peça de trabalho, quase centrado.
Z não será movido.

Contorno externo:
Coloque a ponta da ferramenta no lado esquerdo da peça de trabalho, como para detecção de arestas
</value>
  </data>
  <data name="lblCFProgressInfo.Text" xml:space="preserve">
    <value>Progresso</value>
  </data>
  <data name="btnStartCF.Text" xml:space="preserve">
    <value>Começar</value>
  </data>
  <data name="btnCancelCF.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>Localizador de centros</value>
  </data>
  <data name="btnClearTL.Text" xml:space="preserve">
    <value>Desmarque a correção do comprimento da ferramenta</value>
  </data>
  <data name="label12.Text" xml:space="preserve">
    <value>1. Obtenha o comprimento da primeira ferramenta.
2. Use G92 para definir Z zero.
3. Após a troca da ferramenta, apenas meça o comprimento da ferramenta novamente, a coordenada Z será corrigida.

Após a medição do comprimento da ferramenta:
Z voltará à posição inicial
</value>
  </data>
  <data name="lblTLProgressInfo.Text" xml:space="preserve">
    <value>Progresso</value>
  </data>
  <data name="btnStartTL.Text" xml:space="preserve">
    <value>Começar</value>
  </data>
  <data name="btnCancelTL.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>Comprimento da ferramenta</value>
  </data>
  <data name="btnProbeCoordClear.Text" xml:space="preserve">
    <value>Limpar G92</value>
  </data>
  <data name="rBProbeCoord2.Text" xml:space="preserve">
    <value>Use G92</value>
  </data>
  <data name="rBProbeCoord1.Text" xml:space="preserve">
    <value>Use G10 L2 P0 - Definir coord. (G54-G59)</value>
  </data>
  <data name="gBCoordinates.Text" xml:space="preserve">
    <value>Coordenadas</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Sondagem e deslocamento do comprimento da ferramenta</value>
  </data>
</root>