<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="teachScalingToolStripMenuItem.Text" xml:space="preserve">
    <value>スケーリングを教える</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>画像の回転</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1）「ツール座標」に切り替えます。 （G54）
2）ゼロX、Y位置
3）ワークピース上の工具で工具位置をマーク（X = 0、Y = 0）
4）マーカーをカメラビューの中心の下に移動する
5）実際の位置をオフセットとして教える
6）「Cam coord」に切り替えます。 （G59）-X = 0、Y = 0になりました</value>
  </data>
  <data name="btnApplyAngle.Text" xml:space="preserve">
    <value>GCodeに角度を適用</value>
  </data>
  <data name="teachScalingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1）ホームプロッター
2）カメラを上の位置に移動する
3）画像をクリックして、上の半径の距離を教えます
4）カメラを下の位置に移動する
5）下の半径の距離を教えるために写真をクリックしてください</value>
  </data>
  <data name="toolStripTextBox2.ToolTipText" xml:space="preserve">
    <value>GRBL単位（mmまたはインチ）</value>
  </data>
  <data name="showOverlayGraphicsToolStripMenuItem.Text" xml:space="preserve">
    <value>オーバーレイグラフィックを表示する</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>カメラ</value>
  </data>
  <data name="btnCamCoordTool.Text" xml:space="preserve">
    <value>ツール座標。</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>XY = 0に設定します。 マウスポインターと左クリックで0</value>
  </data>
  <data name="toolStripTextBox1.ToolTipText" xml:space="preserve">
    <value>ビデオ画像を回転-角度を入力</value>
  </data>
  <data name="teachRadiusBottomToolStripMenuItem.Text" xml:space="preserve">
    <value>ティーチ半径の下部を設定</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>カメラビューを教える</value>
  </data>
  <data name="cBCamCoordMove.ToolTip" xml:space="preserve">
    <value>カメラオフセットをグラフィックスに適用する</value>
  </data>
  <data name="teachToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1）ゼロX、Y位置
2）ツール位置をマーク（X = 0、Y = 0で）
3）マーカーがカメラビューの中央に来るまで移動する
4）実際の位置をオフセットとして教える</value>
  </data>
  <data name="setZeroToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>カメラオフセットで座標ゼロを設定</value>
  </data>
  <data name="btnCamCoordCam.ToolTip" xml:space="preserve">
    <value>現在のカメラ位置をツールの下に移動</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>XY = 0; 0に設定</value>
  </data>
  <data name="lblCenterPos.Text" xml:space="preserve">
    <value>形状が見つかりません</value>
  </data>
  <data name="btnAutoCenter.Text" xml:space="preserve">
    <value>中央の赤丸</value>
  </data>
  <data name="toolStripTextBox3.ToolTipText" xml:space="preserve">
    <value>GRBL単位（mmまたはインチ）</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="upperPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>カメラビューを教える</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>セットアップ</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>フィルターセットを選択</value>
  </data>
  <data name="upperPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>上部位置を教える</value>
  </data>
  <data name="cBShapeDetection.Text" xml:space="preserve">
    <value>形状認識</value>
  </data>
  <data name="camSourceToolStripMenuItem.Text" xml:space="preserve">
    <value>ビデオソース</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>カメラのオフセット/動き</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>ビデオ画像を回転-角度を入力</value>
  </data>
  <data name="setZeroToolStripMenuItem.Text" xml:space="preserve">
    <value>座標系オフセットを設定</value>
  </data>
  <data name="teachToolStripMenuItem.Text" xml:space="preserve">
    <value>カメラオフセットを教える</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>カメラ</value>
  </data>
  <data name="compensateAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>角度とスケールを補正する</value>
  </data>
  <data name="btnApplyAngle.ToolTip" xml:space="preserve">
    <value>マウスの右ボタンを使用して角度を測定します。
ボタンを押して、測定された角度でGコードを変換します。</value>
  </data>
  <data name="btnCamCoordCam.Text" xml:space="preserve">
    <value>カムコーデ</value>
  </data>
  <data name="crossHairsToolStripMenuItem.Text" xml:space="preserve">
    <value>十字線</value>
  </data>
  <data name="colorsToolStripMenuItem.Text" xml:space="preserve">
    <value>色</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>低い位置を教える</value>
  </data>
  <data name="cBCamCoordMove.Text" xml:space="preserve">
    <value>移動ステージ</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>測定する</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>オートアライメント</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.Text" xml:space="preserve">
    <value>オフセットを教える</value>
  </data>
  <data name="teachRadiusTopToolStripMenuItem.Text" xml:space="preserve">
    <value>ティーチ半径を上に設定</value>
  </data>
  <data name="lblAngle.ToolTip" xml:space="preserve">
    <value>測定角度</value>
  </data>
  <data name="btnCamCoordTool.ToolTip" xml:space="preserve">
    <value>現在のツールの位置をカメラの下に移動する</value>
  </data>
  <data name="camSourceToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>カメラソースを選択します。</value>
  </data>
  <data name="moveMarkerToCenterToolStripMenuItem.Text" xml:space="preserve">
    <value>実際の位置を設定します。 マーカー位置へ</value>
  </data>
  <data name="teachMarkerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>XY =マーカーの位置を設定</value>
  </data>
</root>