<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmsPictureBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>259, 76</value>
  </data>
  <data name="moveMarkerToCenterToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>258, 22</value>
  </data>
  <data name="moveMarkerToCenterToolStripMenuItem.Text" xml:space="preserve">
    <value>Setze aktuelle Pos. als Markerpos.</value>
  </data>
  <data name="compensateAngleToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>258, 22</value>
  </data>
  <data name="compensateAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>Winkel und Skalierung ausgleichen</value>
  </data>
  <data name="toolStripSeparator1.Size" type="System.Drawing.Size, System.Drawing">
    <value>255, 6</value>
  </data>
  <data name="showOverlayGraphicsToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>258, 22</value>
  </data>
  <data name="showOverlayGraphicsToolStripMenuItem.Text" xml:space="preserve">
    <value>Zeige GCode Grafik</value>
  </data>
  <data name="nUDCameraZoom.Location" type="System.Drawing.Point, System.Drawing">
    <value>47, 14</value>
  </data>
  <data name="setupToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>90, 20</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="camSourceToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>152, 22</value>
  </data>
  <data name="camSourceToolStripMenuItem.Text" xml:space="preserve">
    <value>Videoquelle</value>
  </data>
  <data name="camSourceToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Wähle die Videoquelle aus</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>152, 22</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>Bilddrehung</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Videobild drehen - Winkel eingeben</value>
  </data>
  <data name="toolStripTextBox1.ToolTipText" xml:space="preserve">
    <value>Videobild drehen - Winkel eingeben</value>
  </data>
  <data name="teachScalingToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>152, 22</value>
  </data>
  <data name="teachScalingToolStripMenuItem.Text" xml:space="preserve">
    <value>Bild Skalierung</value>
  </data>
  <data name="teachScalingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Setzen der Bildskalierung (Kamera ist an Z-Achse befestigt) an oberer und unterer Z-Position
um Abhängig von der Z-Position die richtige Grafikskalierung zu berechnen

1) Home Plotter - es werden die Z-Maschinenkoordinaten verwendet
2) Fahre die Kamera zur oberen Position
3) Linksklick im Bild setzt obere Skalierung auf oberen Skalierungsradius
4) Fahre die Kamera zur unteren Position
5) Linksklick im Bild setzt untere Skalierung auf unteren Skalierungsradius</value>
  </data>
  <data name="upperPositionToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>242, 22</value>
  </data>
  <data name="upperPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Setze Skalierung obere Position</value>
  </data>
  <data name="upperPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Kameraansicht lernen</value>
  </data>
  <data name="teachRadiusTopToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>242, 22</value>
  </data>
  <data name="teachRadiusTopToolStripMenuItem.Text" xml:space="preserve">
    <value>Skalierungsradius oben</value>
  </data>
  <data name="toolStripTextBox2.ToolTipText" xml:space="preserve">
    <value>in GRBL Einheiten (mm oder Inch)</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>242, 22</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Setze Skalierung untere Position</value>
  </data>
  <data name="teachRadiusBottomToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>242, 22</value>
  </data>
  <data name="teachRadiusBottomToolStripMenuItem.Text" xml:space="preserve">
    <value>Skalierungsradius unten</value>
  </data>
  <data name="toolStripTextBox3.ToolTipText" xml:space="preserve">
    <value>in GRBL Einheiten (mm oder Inch)</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>152, 22</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.Text" xml:space="preserve">
    <value>Bild Offset</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Setzen des Offsets zwischen Mitte Kamerabild und Werkzeugposition
1) setze 'Tool coord.' (G54)
2) Nulle die X,Y Position
3) Markiere die Werkzeugposition (bei Koordinate X=0,Y=0) mit Werkzeug auf Werkstück
4) Verfahre XY bis die Markierung in der Bildmitte erscheint
5) Setze den Kameraoffset
6) setze 'Cam coord.' - steht nun aux X=0, Y=0</value>
  </data>
  <data name="teachToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>180, 22</value>
  </data>
  <data name="teachToolStripMenuItem.Text" xml:space="preserve">
    <value>Kameraoffset setzen</value>
  </data>
  <data name="teachToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Setzen des Offsets zwischen Mitte Kamerabild und Werkzeugposition
1) Nulle die X,Y Position
2) Markiere die Werkzeugposition (bei Koordinate X=0,Y=0)
3) Verfahre XY bis die Markierung in der Bildmitte erscheint
4) Setze den Kameraoffset</value>
  </data>
  <data name="colorsToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>152, 22</value>
  </data>
  <data name="colorsToolStripMenuItem.Text" xml:space="preserve">
    <value>Farben</value>
  </data>
  <data name="textToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>134, 22</value>
  </data>
  <data name="crossHairsToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>134, 22</value>
  </data>
  <data name="crossHairsToolStripMenuItem.Text" xml:space="preserve">
    <value>Fadenkreuz</value>
  </data>
  <data name="setZeroToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>190, 20</value>
  </data>
  <data name="setZeroToolStripMenuItem.Text" xml:space="preserve">
    <value>Setze Koordinaten System Offset</value>
  </data>
  <data name="setZeroToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Setze XY-Koordinate mit Mauszeiger und Linksklick</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>206, 22</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Setzte XY=0;0</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>Setze XY=0;0 mit Mauszeiger und Linksklick</value>
  </data>
  <data name="teachMarkerPositionToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>206, 22</value>
  </data>
  <data name="teachMarkerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>Setze XY=Markerposition</value>
  </data>
  <data name="btnApplyAngle.Text" xml:space="preserve">
    <value>Winkel -&gt; GCode</value>
  </data>
  <data name="btnApplyAngle.ToolTip" xml:space="preserve">
    <value>Rechte Maustaste um WInkel zu messen
Drücke diesen Knopf um den G-Code um diesen Winkel zu drehen</value>
  </data>
  <data name="btnCamCoordTool.ToolTip" xml:space="preserve">
    <value>Bewegen Sie die aktuelle Werkzeugposition unter die Kamera</value>
  </data>
  <data name="cBCamCoordMove.ToolTip" xml:space="preserve">
    <value>Wenden Sie den Kameraversatz auf Grafiken an</value>
  </data>
  <data name="lblAngle.Location" type="System.Drawing.Point, System.Drawing">
    <value>50, 16</value>
  </data>
  <data name="lblAngle.ToolTip" xml:space="preserve">
    <value>Gemessener Winkel</value>
  </data>
  <data name="btnCamCoordCam.ToolTip" xml:space="preserve">
    <value>Bewegen Sie die aktuelle Kameraposition unter das Werkzeug</value>
  </data>
  <data name="lblOffset.Location" type="System.Drawing.Point, System.Drawing">
    <value>283, 18</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Kamera</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>Kamera Offset</value>
  </data>
  <data name="lblCenterPos.Location" type="System.Drawing.Point, System.Drawing">
    <value>131, 59</value>
  </data>
  <data name="lblCenterPos.Size" type="System.Drawing.Size, System.Drawing">
    <value>108, 13</value>
  </data>
  <data name="lblCenterPos.Text" xml:space="preserve">
    <value>Keine Form gefunden</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Messen</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>43, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Winkel:</value>
  </data>
  <data name="cBShapeDetection.Text" xml:space="preserve">
    <value>Formenerkennung</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Formenerkennung</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>80, 13</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Filterset wählen</value>
  </data>
  <data name="btnAutoCenter.Size" type="System.Drawing.Size, System.Drawing">
    <value>122, 23</value>
  </data>
  <data name="btnAutoCenter.Text" xml:space="preserve">
    <value>Roten Ring zentrieren</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Kamera</value>
  </data>
</root>