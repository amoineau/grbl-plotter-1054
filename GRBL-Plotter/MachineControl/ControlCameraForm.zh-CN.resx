<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="moveMarkerToCenterToolStripMenuItem.Text" xml:space="preserve">
    <value>将当前位置设置为标记位置。</value>
  </data>
  <data name="compensateAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>补偿角度和比例</value>
  </data>
  <data name="showOverlayGraphicsToolStripMenuItem.Text" xml:space="preserve">
    <value>显示叠加图形</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>放大</value>
  </data>
  <data name="camSourceToolStripMenuItem.Text" xml:space="preserve">
    <value>视讯来源</value>
  </data>
  <data name="camSourceToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>选择摄像机源。</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.Text" xml:space="preserve">
    <value>图片旋转</value>
  </data>
  <data name="teachRadiusTopToolStripMenuItem.Text" xml:space="preserve">
    <value>设置示教半径顶部</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>教低位</value>
  </data>
  <data name="lowerPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>示教相机视图</value>
  </data>
  <data name="teachRadiusBottomToolStripMenuItem.Text" xml:space="preserve">
    <value>设定示教半径底</value>
  </data>
  <data name="teachScalingToolStripMenuItem.Text" xml:space="preserve">
    <value>缩放教学</value>
  </data>
  <data name="teachScalingToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1）家用绘图仪
2）将相机移到较高位置
3）点击图片以示最大半径的距离
4）将相机移至较低位置
5）点击图片以示下半径的距离</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.Text" xml:space="preserve">
    <value>示教偏移</value>
  </data>
  <data name="teachOffsetToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1）切换到“工具坐标”。 （G54）
2）X，Y位置为零
3）用工具在工件上标记工具位置（在X = 0，Y = 0处）
4）将标记移至相机视图中心下方
5）示教实际位置作为偏移量
6）切换到“凸轮坐标”。 （G59）-现在显示X = 0，Y = 0</value>
  </data>
  <data name="crossHairsToolStripMenuItem.Text" xml:space="preserve">
    <value>十字线</value>
  </data>
  <data name="colorsToolStripMenuItem.Text" xml:space="preserve">
    <value>色彩</value>
  </data>
  <data name="setupToolStripMenuItem.Text" xml:space="preserve">
    <value>设定</value>
  </data>
  <data name="teachMarkerPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>设置XY =标记位置</value>
  </data>
  <data name="setZeroToolStripMenuItem.Text" xml:space="preserve">
    <value>设置坐标系偏移</value>
  </data>
  <data name="setZeroToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>将相机坐标设为零</value>
  </data>
  <data name="btnApplyAngle.Text" xml:space="preserve">
    <value>将角度应用于GCode</value>
  </data>
  <data name="btnApplyAngle.ToolTip" xml:space="preserve">
    <value>使用鼠标右键测量角度。
按下按钮以测量角度转换G-Code。</value>
  </data>
  <data name="btnCamCoordTool.ToolTip" xml:space="preserve">
    <value>将当前工具位置移到摄像头下方</value>
  </data>
  <data name="cBCamCoordMove.ToolTip" xml:space="preserve">
    <value>将相机偏移量应用于图形</value>
  </data>
  <data name="lblAngle.ToolTip" xml:space="preserve">
    <value>测量角度</value>
  </data>
  <data name="btnCamCoordCam.ToolTip" xml:space="preserve">
    <value>将当前相机位置移到工具下方</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>相机</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>相机偏移/移动</value>
  </data>
  <data name="lblCenterPos.Text" xml:space="preserve">
    <value>找不到形状</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>角</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>措施</value>
  </data>
  <data name="cBShapeDetection.Text" xml:space="preserve">
    <value>形状识别</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>选择过滤器组</value>
  </data>
  <data name="btnAutoCenter.Text" xml:space="preserve">
    <value>中心红色圆圈</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>自动对齐</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>相机</value>
  </data>
  <data name="setRotationAngleToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>旋转视频图像-输入角度</value>
  </data>
  <data name="upperPositionToolStripMenuItem.Text" xml:space="preserve">
    <value>示教上位</value>
  </data>
  <data name="upperPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>示教相机视图</value>
  </data>
  <data name="teachToolStripMenuItem.Text" xml:space="preserve">
    <value>示教相机偏移</value>
  </data>
  <data name="teachToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>1）X，Y位置为零
2）标记刀具位置（在X = 0，Y = 0处）
3）移动直到标记位于相机视图的中心
4）教实际位置作为偏移</value>
  </data>
  <data name="toolStripTextBox1.ToolTipText" xml:space="preserve">
    <value>旋转视频图像-输入角度</value>
  </data>
  <data name="toolStripTextBox2.ToolTipText" xml:space="preserve">
    <value>以GRBL单位（毫米或英寸）</value>
  </data>
  <data name="toolStripTextBox3.ToolTipText" xml:space="preserve">
    <value>以GRBL单位（毫米或英寸）</value>
  </data>
  <data name="teachZeroPositionToolStripMenuItem.ToolTipText" xml:space="preserve">
    <value>设置XY = 0;用鼠标指针设置0并单击鼠标左键</value>
  </data>
</root>